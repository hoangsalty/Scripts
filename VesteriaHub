getgenv().Mobs = {
    "Elder Shroom","Poisoned Shroom",
    "Scarecrow",
    "Spider","Spiderling",
    "Guardian",
    "Moglo","Mogloko",
    "Bandit Skirmisher",
    "Pit Ratty",--"Big Slime",
    "Gorgog Guardian",
    "Deathsting",
    "Crabby",
}

getgenv().Bosses = {
    "Chad",
    "The Yeti",
    "Spider Queen",
    "Terror of the Deep",
    "Mo Ko Tu Aa",
    "Auktufiti the Watcher",
}

getgenv().DontSellItems = {
    "Skill Reset Tome",
    "Reset Scroll",
    "Holy Scroll",
    "Cursed Weapon ATK Scroll (60%)",
    "Cursed Armor DEF Scroll (60%)",
    "Ancient Weapon ATK Scroll (10%)",
    "Ancient Weapon INT Scroll (10%)",
    "Ancient Weapon DEX Scroll (10%)",
    "Ancient Weapon STR Scroll (10%)",
    "Ancient Weapon VIT Scroll (10%)",
    "Royal Spider Egg",
    "Golden Mushroom",
    "Hunter Rune",
    "Warrior Rune",
    "Mage Rune",
    "Nilgarf Rune",
}

getgenv().SellGears = {
    "Wood", "Stick",
    "Rusty",
    "Oak",
    "Willow Staff",
    "Leather Tunic",
}

while not game:IsLoaded() do wait() end
function WaitForChild(Parent, ChildName)
    if Parent:FindFirstChild(ChildName) then
        return Parent[ChildName]
    else
        repeat wait() until Parent:FindFirstChild(ChildName) or not Parent.Parent
        return Parent:FindFirstChild(ChildName)
    end
end

local Player = game:GetService("Players").LocalPlayer
Player.Idled:connect(function()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local Character, Hitbox, network
local Update
Update = function()
    if Player.Character == nil then repeat wait() until Player.Character ~= nil and Player.Character.Parent end
    Character = Player.Character
    Hitbox = WaitForChild(Character, "hitbox")
    network = WaitForChild(game.ReplicatedStorage.modules, "network")
    if Hitbox and network then
        return Character, Hitbox, network
    else
        return Update(wait())
    end
end

local Name = "Vesteria_Settings.lua"
local DefaultSettings = {
autofarm = false,
avoidplayers = false,
killaura = false,
chestaura = false,
pickup = false,
autosell = false,
diffserver = false,
avoidDistance = 20,
}

if not pcall(function() readfile(Name) end) then writefile(Name, game:GetService("HttpService"):JSONEncode(DefaultSettings)) end
local NewSettings = game:GetService("HttpService"):JSONDecode(readfile(Name))
function Save()
    writefile(Name,game:GetService("HttpService"):JSONEncode(NewSettings))
end

---GUI
local Luminosity = loadstring(game:HttpGet("https://raw.githubusercontent.com/iHavoc101/Genesis-Studios/main/UserInterface/Luminosity.lua", true))()
local window = Luminosity.new("Vesteria", "Press LeftBracket '['", 2692648378)
----Features
local Features = window.Tab("Features")
local AutoFarm = Features.Cheat("AutoFarm", "Auto Farming", function(State)
    NewSettings.autofarm = State
    Save()
    if NewSettings.autofarm == false then
        Update()
        if Character:FindFirstChild("TPBypassed") then
            Character.TPBypassed:Remove()
            Hitbox.CFrame = Hitbox.CFrame + Vector3.new(0,20,0)
            Hitbox.CanCollide = true
        end
    end
end) AutoFarm.Value = NewSettings.autofarm --- Toggle Statement

AutoFarm.Switch("Rejoin different server every 20 minutes", function(State)
    NewSettings.diffserver = State
    Save()
end).Value = NewSettings.diffserver

AutoFarm.Switch("Avoid players while farming", function(State)
    NewSettings.avoidplayers = State
    Save()
end).Value = NewSettings.avoidplayers

AutoFarm.Slider("Avoid distance", {Precise = true, Default = 20, Min = 20, Max = 50}, function(value)
    NewSettings.avoidDistance = value
    Save()
end)
--Kill Aura / Open Chests
local Auras = Features.Cheat("Kill Aura", "Using default distance", function(State)
    NewSettings.killaura = State
    Save()
end) Auras.Value = NewSettings.killaura --- Toggle Statement

Auras.Switch("Open chest aura", function(State)
    NewSettings.chestaura = State
    Save()
end).Value = NewSettings.chestaura
--Pick up / Auto Sell
local Others = Features.Folder("Other Features", "Some other features")
Others.Switch("Pick Up", function(State)
    NewSettings.pickup = State
    Save()
end).Value = NewSettings.pickup

Others.Switch("Sell", function(State)
    NewSettings.autosell = State
    Save()
end).Value = NewSettings.autosell
--Fly
local flySpeed = 50
local Fly = Features.Cheat("Fly", "Modify", function(State)
    fly = State
    function setup()
        Update()
        T = Instance.new("Part", Character)
        T.Name = "Fly Part"
        T.CanCollide = false
        T.Transparency = 1
        weld = Instance.new("Weld", T)
        weld.Part0 = Hitbox
        weld.Part1 = T
        BG = Instance.new('BodyGyro', T)
        BV = Instance.new('BodyVelocity', T)
        BG.P = 9e4
        BG.maxTorque = Vector3.new(9e4,9e4,9e4)
        BG.CFrame = T.CFrame
        BV.velocity = Vector3.new(0, 0.1, 0)
        BV.maxForce = Vector3.new(9e4,9e4,9e4)
	    Hitbox.CanCollide = false
    end
    
    local CONTROL = {F = 0, B = 0, L = 0, R = 0}
    local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
    local mouse = Player:GetMouse()
    mouse.KeyDown:connect(function(k)
    if k:lower() == 'w' then CONTROL.F = 1
    elseif k:lower() == 's' then CONTROL.B = -1
    elseif k:lower() == 'a' then CONTROL.L = -1
    elseif k:lower() == 'd' then CONTROL.R = 1
    end
    end)
    
    mouse.KeyUp:connect(function(k)
    if k:lower() == 'w' then CONTROL.F = 0
    elseif k:lower() == 's' then CONTROL.B = 0
    elseif k:lower() == 'a' then CONTROL.L = 0
    elseif k:lower() == 'd' then CONTROL.R = 0
    end
    end)

    Update()
    if fly == true then
        setup()
        repeat wait()
            if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
                SPEED = flySpeed
            elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
                SPEED = 0
            end
            if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
                BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
            elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
                BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            else
                BV.velocity = Vector3.new(0, 0.1, 0)
            end
            BG.CFrame = game.Workspace.CurrentCamera.CoordinateFrame
        until fly == false
    elseif fly == false and Character:FindFirstChild("Fly Part") then
        Update()
        CONTROL = {F = 0, B = 0, L = 0, R = 0}
        lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        SPEED = 0
        Character:FindFirstChild("Fly Part"):Remove()
	    Hitbox.CanCollide = true
    end
end)

Fly.Slider("Fly speed", {Precise = true, Default = 50, Min = 50, Max = 200}, function(value)
    flySpeed = value
end)
----ESP
local ESP = window.Tab("ESP")
function CreateEsp(part, name, color)
    Update()
    local boxholder = Instance.new("BillboardGui", part)
    boxholder.Name = "ESP"
    boxholder.AlwaysOnTop = true
    boxholder.Size = UDim2.new(5, 0, 8, 0)
    boxholder.Adornee = part
    boxholder.MaxDistance = math.huge
    local textLabel = Instance.new("TextLabel", boxholder)
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, 0, 2, 0)
    textLabel.TextSize = 15
    textLabel.TextColor3 = color
    textLabel.Font = Enum.Font.SourceSansSemibold
    textLabel.TextStrokeTransparency = 0.25
    game:GetService("RunService").Stepped:connect(function()
        pcall(function()
            local M = (Character.PrimaryPart.Position - part.Position).magnitude
            textLabel.Text = name .."\n[" .. M - (M % 1) .. "]"
        end)
    end)
end
local Gates = ESP.Cheat("Gates", "Gates ESP", function(State)
    gates = State
    for i,v in next, workspace:GetChildren() do
        if v:FindFirstChild("teleportDestination") then
            local placeid = v.teleportDestination.Value
            local name = "Need to be checked"
            if placeid == 2035250551 then name = "Mushroom Forest"
            elseif placeid == 2060360203 then name = "Mushroom Grotto"
            elseif placeid == 2060556572 then name = "The Clearing"
            elseif placeid == 2064647391 then name = "Mushtown"
            elseif placeid == 2093766642 then name = "Seaside Path"
            elseif placeid == 2119298605 then name = "Nilgarf"
            elseif placeid == 2180867434 then name = "Farmlands"
            elseif placeid == 2260598172 then name = "Enchanted Forest"
            elseif placeid == 2376890690 then name = "Redwood Pass"
            elseif placeid == 2470481225 then name = "Warrior Stronghold"
            elseif placeid == 2471035818 then name = "Scallop Shores"
            elseif placeid == 2496503573 then name = "Colosseum"
            elseif placeid == 2544075708 then name = "Crabby Den"
            elseif placeid == 2546689567 then name = "Port Fidelio"
            elseif placeid == 2878620739 then name = "Nilgarf Sewers"
            elseif placeid == 3112029149 then name = "Tree of Life"
            elseif placeid == 3207211233 then name = "Spider Abyss"
            elseif placeid == 3232913902 then name = "Shiprock Bottom"
            elseif placeid == 3232938614 then name = "The Gauntlet"
            elseif placeid == 3273679677 then name = "Mushtropolis"
            elseif placeid == 3303140173 then name = "Whispering Dunes"
            elseif placeid == 3330001318 then name = "Spider Camp"
            elseif placeid == 3360349837 then name = "The Gauntlet (Hunter Occupied)"
            elseif placeid == 3372071669 then name = "Testing Realm"
            elseif placeid == 3460262616 then name = "Lost Corridor"
            elseif placeid == 3852057184 then name = "Great Crossroads"
            elseif placeid == 4282412540 then name = "Aboard the Wayfarer"
            elseif placeid == 4544425669 then name = "Valley of the Gods"
            elseif placeid == 4653017449 then name = "Guild Hall"
            elseif placeid == 4789838965 then name = "The Pit"
            elseif placeid == 4837338537 then name = "Tribute Wars"
            elseif placeid == 5986816252 then name = "Gorgog Pond"
            elseif placeid == 5995061312 then name = "Gorgog Lab"
            end
            if gates == true and not v:FindFirstChild("ESP") then
                CreateEsp(v, name, Color3.fromRGB(255, 89, 89))
            elseif gates == false and v:FindFirstChild("ESP") then
                v.ESP:Remove()
            end
        end
    end
end)
local Chests = ESP.Cheat("Chests", "Chests ESP", function(State)
    chests = State
    for i,v in next, workspace:GetChildren() do
        if v:IsA("Model") and v.Name:find("Chest") and v:FindFirstChild("RootPart") and v:FindFirstChildWhichIsA("Model") then
            local chestModel = v:FindFirstChildWhichIsA("Model")
            chestModel.ChildAdded:connect(function(child)
                if child.Name == "chestBillboard" and chests then
                    pcall(function() v.RootPart.ESP:Remove() end)
                end
            end)
            if chests == true and not chestModel:FindFirstChild("chestBillboard") and not v.RootPart:FindFirstChild("ESP") then
                CreateEsp(v.RootPart, v.Name, Color3.fromRGB(245, 205, 48))
            elseif (chests == false or chestModel:FindFirstChild("chestBillboard")) and v.RootPart:FindFirstChild("ESP") then
                v.RootPart.ESP:Remove()
            end
        end
    end
    if workspace:FindFirstChild("Chests") then
        for i,v in next, workspace.Chests:GetChildren() do
            if v:IsA("Model") and v.Name:find("Chest") and v:FindFirstChild("RootPart") and v:FindFirstChildWhichIsA("Model") then
                local chestModel = v:FindFirstChildWhichIsA("Model")
                chestModel.ChildAdded:connect(function(child)
                    if child.Name == "chestBillboard" and chests then
                        pcall(function() v.RootPart.ESP:Remove() end)
                    end
                end)
                if chests == true and not chestModel:FindFirstChild("chestBillboard") and not v.RootPart:FindFirstChild("ESP") then
                    CreateEsp(v.RootPart, v.Name, Color3.fromRGB(245, 205, 48))
                elseif (chests == false or chestModel:FindFirstChild("chestBillboard")) and v.RootPart:FindFirstChild("ESP") then
                    v.RootPart.ESP:Remove()
                end
            end
        end
    end
end)

---Credits
local Credit = window.Tab("Credits")
Credit.Folder("Script: edjlambo (Jank)", "")
Credit.Folder("UI Lib: OminousVibes", "Big love for a decent looking UI Lib")
---No Fog
game.Lighting.FogEnd = 1000000

--- God Mode
local old
local damageRemote = game.ReplicatedStorage.modules.network.playerRequest_damageEntity
old = hookfunction(damageRemote.FireServer, function(self, ...) 
    local args = {...}
    if self == damageRemote and args[3] == "monster" then
        return
    end
    return old(self, ...)
end)
--- Inf Stamina
spawn(function()
    while game:GetService("RunService").Heartbeat:wait() do
        Update()
        if Hitbox:FindFirstChild("stamina") and Hitbox.stamina.Value ~= 5 then
            Hitbox.stamina.Value = 5
        end
        Hitbox.mana.Value = Hitbox.maxMana.Value
    end
end)

---Pick up
spawn(function()
    while wait() do
        if NewSettings.pickup == true then
            coroutine.resume(coroutine.create(function()
                for i,v in next, workspace.placeFolders.items:GetChildren() do
                    if v:FindFirstChild("owners") and v.owners:FindFirstChild(Player.UserId) then
                        Update()
                        if (v.Position - Hitbox.Position).magnitude <= 10 then
                            network.pickUpItemRequest:InvokeServer(v)
                        end
                    end
                end
            end))
        end
    end
end)

---Kill Aura
coroutine.wrap(function()
    while wait() do
        if NewSettings.killaura == true then
            for i,v in next, workspace.placeFolders.entityManifestCollection:GetChildren() do
                if v:IsA("Part") and v:FindFirstChild("health") and v.health.Value > 0 then
                    Update()
                    if (v.Position - Hitbox.Position).magnitude <= 30 then
                        network.fireEvent:FireServer("playerWillUseBasicAttack", client)
                        network.replicatePlayerAnimationSequence:FireServer("daggerAnimations", "strike1", {["attackSpeed"] = 0})
                        network.replicatePlayerAnimationSequence:FireServer("daggerAnimations", "strike2", {["attackSpeed"] = 0})
                        network.playerRequest_damageEntity:FireServer(v, v.Position, "equipment")
                        network.playerRequest_damageEntity:FireServer(v, v.Position, "equipment")
                    end
                end
            end
        end
    end
end)()

---Sell
function isInData(ID)
    for c,d in next, require(game.ReplicatedStorage.itemData) do
        if (d.category == "consumable" or d.category == "miscellaneous") and d.id == ID and not table.find(getgenv().DontSellItems, d.name) then
            return true
        elseif d.category == "equipment" and d.id == ID then
            for k,j in next, getgenv().SellGears do
                if d.name:find(j) then
                    return true
                end
            end
        end
    end
end

function sell()
    local items = require(game.Players.LocalPlayer.PlayerGui.gameUI.playerMenu.right.inventoryFrame.inventory)
    for i,v in next, debug.getupvalue(items.init,3) do
        if isInData(v.id) then
            game.ReplicatedStorage.modules.network.playerRequest_sellItemToShop:InvokeServer({["id"] = v.id, ["position"] = v.position}, v.stacks)
        end
    end
end

spawn(function()
    while wait() do
        if NewSettings.autosell == true then
            for i,v in next, Player.PlayerGui.gameUI.playerMenu.right.inventoryFrame.header.sorts:GetChildren() do
                if v:IsA("ImageButton") then
                    for i,button in next, getconnections(v.Activated) do button:Fire() end
                    sell()
                    wait(1)
                end
            end
        end
    end
end)

--Open Chest
spawn(function()
    while wait() do
        if NewSettings.chestaura == true then
            for i,v in next, workspace:GetChildren() do
                if v:IsA("Model") and v.Name:find("Chest") and v:FindFirstChild("RootPart") and not v:FindFirstChildWhichIsA("chestBillboard") then
                    Update()
                    if (v.RootPart.Position - Hitbox.Position).magnitude <= 30 then
                        network.openTreasureChest:InvokeServer(v)
                    end
                end
            end
            if workspace:FindFirstChild("Chests") then
                for i,v in next, workspace.Chests:GetChildren() do
                    if v:IsA("Model") and v.Name:find("Chest") and v:FindFirstChild("RootPart") and not v:FindFirstChildWhichIsA("chestBillboard") then
                        Update()
                        if (v.RootPart.Position - Hitbox.Position).magnitude <= 30 then
                            network.openTreasureChest:InvokeServer(v)
                        end
                    end
                end
            end
        end
    end
end)

--Auto Farm
function PlayerNearby(Position)
    local ClosestMagnitude = math.huge
    for i,v in next, game.Players:GetPlayers() do
        if v.Name ~= Player.Name and v.Character and v.Character:FindFirstChild("hitbox") then
            local Magnitude = (Position - v.Character.hitbox.Position).magnitude
            if Magnitude < ClosestMagnitude and NewSettings.avoidplayers == true then
                ClosestMagnitude = Magnitude
            end
        end
    end
    if NewSettings.avoidplayers == true then
        return (ClosestMagnitude <= (NewSettings.avoidDistance or 30))
    else
        return (ClosestMagnitude <= math.huge)
    end
end

function NearPortal(Position)
    local ClosestMagnitude = math.huge
    for i,v in next, workspace:GetChildren() do
        if v:IsA("Part") and v:FindFirstChild("teleportDestination") then
            local Magnitude = (Position - v.Position).magnitude
            if Magnitude < ClosestMagnitude and not PlayerNearby(v.Position) then
                ClosestMagnitude = Magnitude
            end
        end
    end
    return (ClosestMagnitude <= 20)
end

function getMob()
    local nearest = nil
    local maxDist = math.huge
    for i,v in next, workspace.placeFolders.entityManifestCollection:GetChildren() do 
        if v:IsA("Part") and table.find(Mobs, v.Name) and v:FindFirstChild("health") and v.health.Value > 0 then
            Update()
            local distance = (Hitbox.Position - v.Position).magnitude
            if distance < maxDist then
                maxDist = distance
                nearest = v
            end
        end
    end
    return nearest
end

function getBoss()
    for i,v in next, workspace.placeFolders.entityManifestCollection:GetChildren() do 
        if (table.find(getgenv().Bosses, v.Name) or v:FindFirstChild("specialName") or v:FindFirstChild("giantEnemySmoke")) and v:FindFirstChild("health") and v.health.Value > 0 then
            return v
        end
    end
end

function getItem()
    local nearest
    local maxDist = math.huge
    for i,v in next, workspace.placeFolders.items:GetChildren() do
        if v ~= nil and not v.Name:lower():find("coin") and not v.Name:lower():find("arrow") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("owners") and v.owners:FindFirstChild(Player.UserId) then
            Update()
            local distance = (v.Position - Hitbox.Position).magnitude
            if distance < maxDist and not NearPortal(v.Position) then
                maxDist = distance
                nearest = v
            end
        end
    end
    return nearest
end

function moveto(target, yvector)
    Update()
    if not Character:FindFirstChild("TPBypassed") and NewSettings.autofarm == true then
        a = Instance.new("Part")
        a.Parent = Character
        a.CanCollide = false
        a.CFrame = Hitbox.CFrame
        a.Name = "TPBypassed"
        a.Transparency = 1
        weld = Instance.new("Weld", a)
        weld.Part0 = a
        weld.Part1 = Hitbox
        BP = Instance.new("BodyPosition")
        BP.Parent = a
        BP.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
    elseif Character:FindFirstChild("TPBypassed") and NewSettings.autofarm == true then
        if (Hitbox.Position - target.Position).magnitude > 50 then
            BP.P = 1000
            BP.D = 500
        else
            BP.P = 1000
            BP.D = 250
        end
        Hitbox.CanCollide = false
        BP.Position = target.Position + Vector3.new(0,yvector,0)
    end
end

function avoidClowns()
    local stupidTable = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
    for i,v in next, stupidTable.data do
        if v.playing ~= #game.Players:GetPlayers() then
            game.ReplicatedStorage.modules.network["playerRequest_teleportToJobId"]:InvokeServer(v.id)
            break
        end
    end
end

spawn(function()
    while wait(1200) do
        if NewSettings.diffserver then
            avoidClowns()
        end
    end
end)

function currentPlrAmount()
    local count = 0
    for i,v in next, game.Players:GetPlayers() do
        if v.UserId ~= nil then
            count = count + 1
        end
    end
    return count
end

function lowPlayerServer()
    local lowest = math.huge
    local ID = nil
    local stupidTable = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
    for i,v in next, stupidTable.data do
        if v.playing <= lowest then
            lowest = v.playing
            ID = v.id
        end
    end
    print(lowest)
    game.ReplicatedStorage.modules.network["playerRequest_teleportToJobId"]:InvokeServer(ID)
end

spawn(function()
    while game:GetService("RunService").Heartbeat:wait() do
        if currentPlrAmount() >= 15 then
            lowPlayerServer()
        end
    end
end)

spawn(function()
    local clowns = {35320019,67237163,116511190,47182827,124071718,80232750}
    while game:GetService("RunService").Heartbeat:wait() do
        for i,v in next, game.Players:GetPlayers() do
            if table.find(clowns, v.UserId) then
                avoidClowns()
            end
        end
    end
end)

spawn(function()
    while wait(.1) do
        if NewSettings.autofarm == true then
            local mob = getMob()
            local item = getItem()
            local boss = getBoss()
            if item then
                repeat game:GetService("RunService").Heartbeat:wait()
                    if not item:FindFirstChild("HumanoidRootPart") or not item:FindFirstChild("owners") or not item.owners:FindFirstChild(Player.UserId) then break end
                    Update()
                    moveto(item, -7)
                until not item:FindFirstChild("HumanoidRootPart") or not item.owners:FindFirstChild(Player.UserId) or NewSettings.autofarm == false
            elseif not item and boss then
                repeat wait()
                    if getItem() or not boss:FindFirstChild("health") or boss.health.Value <= 0 then break end
                    if boss.Name:lower():find("slime") then
                        moveto(boss, 1)
                    else
                        moveto(boss, -15)
                    end
                until boss.health.Value <= 0 or NewSettings.autofarm == false
            elseif not (item and boss) and mob then
                repeat wait()
                    if getBoss() or getItem() or NearPortal(mob.Position) or (PlayerNearby(mob.Position) and NewSettings.avoidplayers) or not mob:FindFirstChild("health") or mob.health.Value <= 0 then break end
                    if mob.Name:lower():find("slime") then
                        moveto(mob, 1)
                    else
                        moveto(mob, -8)
                    end
                until mob.health.Value <= 0 or NewSettings.autofarm == false
            end
        end
    end
end)

game:GetService("UserInputService").InputBegan:Connect(function(Input)
    if Input.KeyCode == Enum.KeyCode.LeftBracket then
        window:Toggle()
    end
end)

syn.queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/hoangsalty/Scripts/master/VesteriaHub", true))()')
